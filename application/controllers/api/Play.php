<?php

defined('BASEPATH') OR exit('No direct script access allowed');

// This can be removed if you use __autoload() in config.php OR use Modular Extensions
require APPPATH . '/libraries/REST_Controller.php';

class Play extends REST_Controller
{	
	/**
	 * GET
	 */
	public function data_get()
	{
		// Display all books
		$this->load->model('Escenario_model');
		$this->load->model('Evidencia_model');
		$this->load->model('Formulario_model');

		$result = $this->Escenario_model->get_last_entries();
		//$form = $this->Formulario_model->get_alternativas_by_formulario_id(6);
		foreach ($result as $key => $value) {
			// obtener lista de evidencias
			$data_evidencia = $this->Evidencia_model->get_by_escenario_id($value['id_escenario']);
			foreach ($data_evidencia as $key1 => $value1) {
				// obtener lista alternativas
				$data_formulario = $this->Formulario_model->get_alternativas_by_formulario_id($value1['id_formulario']);
				$data_evidencia[$key1]['data_formulario'] = $data_formulario;
			}

			$result[$key]['data_evidencia'] = $data_evidencia;
	  }

	  //shuffle($result);
	  //echo json_encode($result);

		if ($result) {
			// Set the response and exit
			$this->response($result, REST_Controller::HTTP_OK); // OK (200) being the HTTP response code
		} else {
			// Set the response and exit
			$this->response([
				'status' => FALSE,
				'message' => 'No users were found'
			], REST_Controller::HTTP_NOT_FOUND); // NOT_FOUND (404) being the HTTP response code
		}
	  
	}
	
	/**
	 * POST
	 */
	public function data_post()
	{
		// Create a new item
		$response = array();
		$data = $this->post('data');

		if (!empty($data)) {
			$data['fecha_fin'] = date('Y-m-d H:i:s');
			$data['fecha_fin'] = date('Y-m-d H:i:s');
			$dataExtra = $data['data_detalle'];
			unset($data['data_detalle']);

			// Registrar juego
			$this->load->database();
			$this->db->insert('ac_juego', $data);
			$id = $this->db->insert_id();

			// Registrar detalle del juego
			if (isset($dataExtra) && count($dataExtra) > 0) {
				$itemsDetalle = $this->_formatDataJuegoDetalle($id, $dataExtra);
				$this->db->insert_batch('ac_juego_detalle', $itemsDetalle); 
			}

			$response = [
				'id' => $id, // Automatically generated by the model
			];		
			$this->set_response($response, REST_Controller::HTTP_CREATED);
		} else {
		  $this->set_response([
			  'status' => FALSE,
			  'message' => 'No users were found'
		  ], REST_Controller::HTTP_NOT_FOUND); // NOT_FOUND (404) being the HTTP response code
		}
	}

	/**
	* formatear detalle juego : para la tabla 'ac_juego_detalle'
	*/
	private function _formatDataJuegoDetalle($id_juego, $data)
	{	
		$items = false;
		if (is_array($data) && count($data) > 0) {
			$items = array();
			foreach ($data as $key => $value) {
				$items[] = array(
					'id_juego' 					=> $id_juego,
					'id_escenario_evidencia' 	=> $value['id_escenario_evidencia'],
					'respuesta'					=> empty($value['respuesta']) ? null : $value['respuesta'],
					'description' 				=> $value['description']
 				);
			}
		}

		return $items;
	}
  
}